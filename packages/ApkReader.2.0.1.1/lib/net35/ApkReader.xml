<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApkReader</name>
    </assembly>
    <members>
        <member name="M:ApkReader.ApkReaderException.#ctor">
            <devdoc>
                <para>
                    Initializes a new instance of the <see cref='T:ApkReader.ApkReaderException' /> class
                    without a message.
                </para>
            </devdoc>
        </member>
        <member name="M:ApkReader.ApkReaderException.#ctor(System.String)">
            <devdoc>
                <para>
                    Initializes a new instance of the <see cref='T:ApkReader.ApkReaderException' /> class with
                    the specified message.
                </para>
            </devdoc>
        </member>
        <member name="P:ApkReader.ResWriter.Writer">
            <summary>
            Gets the underlying <c>BinaryWriter</c> to write primitive values.
            </summary>
        </member>
        <member name="P:ApkReader.Res.ResChunk_header.DataSize">
            <summary>
                The number of bytes the <see cref="T:ApkReader.Res.ResChunk_header" /> class occupies on disk.
            </summary>
        </member>
        <member name="P:ApkReader.Res.ResChunk_header.Type">
            Type identifier for this chunk.  The meaning of this value depends on the containing chunk.
        </member>
        <member name="P:ApkReader.Res.ResChunk_header.HeaderSize">
            Size of the chunk header (in bytes).  Adding this value to the address of the chunk allows
            you to find its associated data (if any).
        </member>
        <member name="P:ApkReader.Res.ResChunk_header.Size">
            Total size of this chunk (in bytes).  This is the chunkSize plus the size of any data 
            associated with the chunk.  Adding this value to the chunk allows you to completely skip
            its contents (including any child chunks).  If this value is the same as chunkSize, there 
            is no data associated with the chunk.
        </member>
        <member name="T:ApkReader.Res.ResStringPool">
            <summary>
                A string pool is a set of strings that can be references by others through a
                <see cref="T:ApkReader.Res.ResStringPool_ref" />.
            </summary>
        </member>
        <member name="P:ApkReader.Res.ResStringPool.Header">
            <summary>
                Gets or sets the header for this pool of strings.
            </summary>
        </member>
        <member name="P:ApkReader.Res.ResStringPool.StringData">
            <summary>
                Gets or sets the list of strings in this pool.
            </summary>
        </member>
        <member name="P:ApkReader.Res.ResStringPool.StyleData">
            <summary>
                Gets or sets the list of style data that applies to the strings in this pool.
            </summary>
        </member>
        <member name="M:ApkReader.Res.ResStringPool.GetString(ApkReader.Res.ResStringPool_ref)">
            <summary>
                Gets a string from this string pool.
            </summary>
            <param name="reference">
                A <see cref="T:ApkReader.Res.ResStringPool_ref" /> that indicates which string you want to
                retrieve.
            </param>
            <returns>
                The requested string.
            </returns>
        </member>
        <member name="M:ApkReader.Res.ResStringPool.GetString(System.Nullable{System.UInt32})">
            <summary>
                Gets a string from this string pool.
            </summary>
            <returns>
                The requested string.
            </returns>
        </member>
        <member name="M:ApkReader.Res.ResStringPool.IndexOfString(System.String)">
            <summary>
                Gets the index of a string.
            </summary>
            <param name="target">
                The string for which to determine the index.
            </param>
            <returns>
                The index of the string.
            </returns>
        </member>
        <member name="M:ApkReader.Res.ResStringPool.GetStyles(System.UInt32)">
            <summary>
                Gets the styles that apply to a string.
            </summary>
            <param name="stringIndex">
                The index of the string to which the styles apply.
            </param>
            <returns>
                The styles that apply to the string specified.
            </returns>
        </member>
        <member name="P:ApkReader.Res.ResTable_config.IMSI_MCC">
            Mobile country code (from SIM). 0 means "any"
        </member>
        <member name="P:ApkReader.Res.ResTable_config.IMSI_MNC">
            Mobile network code (from SIM). 0 means "any"
        </member>
        <member name="T:ApkReader.Res.ResTable_map">
            <summary>
                Not sure this class is correct, since the original code dealing
                with this is pretty cryptic.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.Size">
            <summary>
                Number of bytes in this structure. Always 8.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.Res0">
            <summary>
                Reserved. Always 0.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.DataType">
            <summary>
                The type of the data.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.RawData">
            <summary>
                The raw value of the data.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.ReferenceValue">
            <summary>
                Gets or sets the data as a resource reference. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_REFERENCE" />.
            </summary>
            <remarks>
                Assignments to fields of the <c>ResTable_ref</c> object will
                not be detected. You have to reassign <c>ReferenceValue</c>
                upon change.
            </remarks>
        </member>
        <member name="P:ApkReader.Res.Res_value.StringValue">
            <summary>
                Gets or sets the data as a string reference. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_STRING" />.
            </summary>
            <remarks>
                Assignments to fields of the <c>ResStringPool_ref</c> object will
                not be detected. You have to reassign <c>StringValue</c>
                upon change.
            </remarks>
        </member>
        <member name="P:ApkReader.Res.Res_value.FloatValue">
            <summary>
                Gets or sets the data as a floating point value. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_FLOAT" />.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.IntValue">
            <summary>
                Gets or sets the data as a signed integer value. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_INT_DEC" />
                or <see cref="F:ApkReader.Res.ValueType.TYPE_INT_HEX" />.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.DrawingColorValue">
            <summary>
                Gets or sets the <see cref="P:ApkReader.Res.Res_value.ColorValue" /> as a <see cref="T:System.Drawing.Color" />.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.ColorValue">
            <summary>
                Gets or sets the data as a color value. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_ARGB4" />,
                <see cref="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_ARGB8" />, <see cref="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_RGB4" /> or
                <see cref="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_RGB8" />.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.ComplexDimensionUnit">
            <summary>
                Gets or sets the unit of the data as a dimension value. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_DIMENSION" />.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.ComplexFractionUnit">
            <summary>
                Gets or sets the unit of the data as a fraction value. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_FRACTION" />.
            </summary>
        </member>
        <member name="P:ApkReader.Res.Res_value.ComplexValue">
            <summary>
                Gets or sets the number of the data as a complex value. Used when <see cref="P:ApkReader.Res.Res_value.DataType" /> is
                <see cref="F:ApkReader.Res.ValueType.TYPE_DIMENSION" />
                or <see cref="F:ApkReader.Res.ValueType.TYPE_FRACTION" />.
            </summary>
        </member>
        <member name="F:ApkReader.Res.DimensionUnit.PX">
            Pixels (px)
        </member>
        <member name="F:ApkReader.Res.DimensionUnit.DIP">
            Device Independant Points (dip)
        </member>
        <member name="F:ApkReader.Res.DimensionUnit.SP">
            Scaled device independant Points (sp)
        </member>
        <member name="F:ApkReader.Res.DimensionUnit.PT">
            points (pt)
        </member>
        <member name="F:ApkReader.Res.DimensionUnit.IN">
            inches (in)
        </member>
        <member name="F:ApkReader.Res.DimensionUnit.MM">
            millimeters (mm)
        </member>
        <member name="F:ApkReader.Res.FractionUnit.FRACTION">
            Fraction (%)
        </member>
        <member name="F:ApkReader.Res.FractionUnit.FRACTION_PARENT">
            Fraction of parent (%p)
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_NULL">
            Contains no data.
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_REFERENCE">
            Resource reference as a
            <see cref="T:ApkReader.Res.ResTable_ref" />
            .
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_ATTRIBUTE">
            Attribute resource identifier (Not supported)
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_STRING">
            String reference as a
            <see cref="T:ApkReader.Res.ResStringPool_ref" />
            .
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_FLOAT">
            Float value.
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_DIMENSION">
            Complex dimension value. Float value +
            <see cref="T:ApkReader.Res.DimensionUnit" />
            .
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_FRACTION">
            Complex fraction value. Float value +
            <see cref="T:ApkReader.Res.FractionUnit" />
            .
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_INT_DEC">
            Integer rendered in decimal.
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_INT_HEX">
            Integer rendered in hexadecimal.
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_INT_BOOLEAN">
            Integer rendered as a boolean.
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_ARGB8">
            <see cref="T:System.Drawing.Color" />
            value rendered as #AARRGGBB
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_RGB8">
            <see cref="T:System.Drawing.Color" />
            value rendered as #RRGGBB (alpha = FF)
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_ARGB4">
            <see cref="T:System.Drawing.Color" />
            value rendered as #ARGB
        </member>
        <member name="F:ApkReader.Res.ValueType.TYPE_INT_COLOR_RGB4">
            <see cref="T:System.Drawing.Color" />
            value rendered as #RGB
        </member>
        <member name="T:ApkReader.Utils.BoundedStream">
            <summary>
                A bounded stream forwards all read and write calls to the underlying stream, but is prevented from
                reading or writing past the set bound.
            </summary>
        </member>
        <member name="M:ApkReader.Utils.BoundedStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>Constructs a bounded stream ranging from the current position, to <paramref name="length" /> bytes ahead.</summary>
            <param name="source">Underlying stream</param>
            <param name="length">The length of the bound</param>
        </member>
        <member name="P:ApkReader.Utils.BoundedStream.CanRead">
            <summary>
                Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>
                true if the stream supports reading; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:ApkReader.Utils.BoundedStream.CanSeek">
            <summary>
                Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>
                true if the stream supports seeking; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:ApkReader.Utils.BoundedStream.CanWrite">
            <summary>
                Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>
                true if the stream supports writing; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:ApkReader.Utils.BoundedStream.Length">
            <summary>
                When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>
                A long value representing the length of the stream in bytes.
            </returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:ApkReader.Utils.BoundedStream.Position">
            <summary>
                Gets or sets the position within the current stream.
            </summary>
            <returns>
                The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:ApkReader.Utils.BoundedStream.SourceOrigin">
            <summary>
                Gets the absolute position of the start of this bound.
            </summary>
        </member>
        <member name="M:ApkReader.Utils.BoundedStream.Flush">
            <summary>
                Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ApkReader.Utils.BoundedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
                Sets the position within the current stream.
            </summary>
            <returns>
                The new position within the current stream.
            </returns>
            <param name="offset">A byte offset relative to the <paramref name="origin" /> parameter. </param>
            <param name="origin">
                A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to
                obtain the new position.
            </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">
                The stream does not support seeking, such as if the stream is
                constructed from a pipe or console output.
            </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ApkReader.Utils.BoundedStream.SetLength(System.Int64)">
            <summary>
                Sets the length of the current stream. Not supported by BoundedStream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">
                The stream does not support both writing and seeking, such as if the
                stream is constructed from a pipe or console output.
            </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ApkReader.Utils.BoundedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads a sequence of bytes from the current stream and advances the position within the stream by the number of
                bytes read.
            </summary>
            <returns>
                The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many
                bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <param name="buffer">
                An array of bytes. When this method returns, the buffer contains the specified byte array with the
                values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced
                by the bytes read from the current source.
            </param>
            <param name="offset">
                The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read
                from the current stream.
            </param>
            <param name="count">The maximum number of bytes to be read from the current stream. </param>
            <exception cref="T:System.ArgumentException">
                The sum of <paramref name="offset" /> and <paramref name="count" /> is
                larger than the buffer length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="buffer" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is
                negative.
            </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ApkReader.Utils.BoundedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Writes a sequence of bytes to the current stream and advances the current position within this stream by the number
                of bytes written.
            </summary>
            <param name="buffer">
                An array of bytes. This method copies <paramref name="count" /> bytes from
                <paramref name="buffer" /> to the current stream.
            </param>
            <param name="offset">
                The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the
                current stream.
            </param>
            <param name="count">The number of bytes to be written to the current stream. </param>
            <exception cref="T:System.ArgumentException">
                The sum of <paramref name="offset" /> and <paramref name="count" /> is
                greater than the buffer length.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="count" /> is
                negative.
            </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ApkReader.Utils.BoundedStream.ReadFully">
            <summary>
                Reads and returns any remaining bytes within the stream bounds.
            </summary>
        </member>
    </members>
</doc>
